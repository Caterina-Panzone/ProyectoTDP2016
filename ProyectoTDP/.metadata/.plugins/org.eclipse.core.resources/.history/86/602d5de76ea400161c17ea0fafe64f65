package Juego;

import java.awt.Color;
import java.awt.Component;
import java.awt.EventQueue;
import java.awt.Graphics; 
import java.awt.Graphics2D;
import java.awt.Image;

import javax.swing.BorderFactory;
import javax.swing.Icon;   

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class GUI extends JFrame{
	//Atributos 
	
	private static final long serialVersionUID = 1L;
	protected JPanelFondo contentPane;
	protected JLabel vida;
	protected JPanel contentPuntaje; 
	protected JPanel contentJuego; 
	protected Logica logica;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					GUI frame = new GUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	
	/**
	 * Create the frame.
	 */
	public GUI() {
		addKeyListener(new KeyAdapter() {
			public void keyPressed(KeyEvent arg0) {
					if(arg0.getKeyCode()==KeyEvent.VK_SPACE)
					{
					  jugadorDispara();	
					} 
					else {
						if (arg0.getKeyCode()==KeyEvent.VK_N)
						{
						cambiarNivelJugador(); 
						}
						else{
					      mover(arg0);
						}
		}}});
		
		setResizable(false); 
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 1216, 706);
		contentPane = new JPanelFondo();
		Image img = new ImageIcon(getClass().getResource("/Imagenes/Fondo.png")).getImage(); 	
		contentPane.setImage(img); 
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		contentJuego = new JPanel(); 
		contentJuego.setLayout(null);
		contentJuego.setBounds(100, 0, 1116, 706);
		contentJuego.setOpaque(false);
		
//		ImageIcon imgVacia = new ImageIcon(getClass().getResource("/Imagenes/hola.png"));
//		JLabel hola = new JLabel(imgVacia); 
//		JLabel hola2 = new JLabel(imgVacia); 
//		contentJuego.add(hola);
//		contentJuego.add(hola2); 
//		contentJuego.setComponentZOrder(hola,0);
//		contentJuego.setComponentZOrder(hola2,0);
		
		crearPanelPuntaje(); 
	
		contentPane.add(contentJuego); 
		contentPane.add(contentPuntaje); 
		
		logica = new Logica(this);
	}
	
	public Component add (Component comp){
		return contentJuego.add(comp);
	}
	
	protected void jugadorDispara(){
		logica.jugadorDispara();
	}
	
	protected void cambiarNivelJugador(){
		logica.aumentarNivelJugador();
	}
	
	protected void mover(KeyEvent key){	
		logica.moverJugador(key.getKeyCode());
		this.repaint();
	}
	
	protected void crearPanelPuntaje(){
		contentPuntaje = new JPanel(); 
		contentPuntaje.setLayout(null); 
		contentPuntaje.setOpaque(false);
		contentPuntaje.setBounds(0,0,100,706);
		contentPuntaje.setBorder(BorderFactory.createLineBorder(Color.black,3));
		
		ImageIcon img = new ImageIcon(getClass().getResource("/Imagenes/Vida.png"));
		vida = new JLabel("hola");
		vida.setBounds(0,0,100,100);
		vida.setHorizontalAlignment(JLabel.CENTER);
		vida.setHorizontalTextPosition(JLabel.CENTER);
		
		vida.setIcon(img); 
		
		contentPuntaje.add(vida); 
	}
	
	/*
	 * REINICIA EL JUEGO. 
	 */
	
	public void setInstrucciones(){
		contentPane = new JPanelFondo();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		Image img = new ImageIcon(getClass().getResource("/Imagenes/Fondo.png")).getImage(); 	
		contentPane.setImage(img); 
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		logica = new Logica(this);
		
		this.repaint(); 
	}
	
//	public void ubicarObstaculo(JLabel imagen){
//		contentJuego.setComponentZOrder(imagen,1);
//	}
	
	public void traerFrenteDisparo(JLabel imagen){
		contentJuego.setComponentZOrder(imagen,2);
	}
	
	public void traerFrentePower(JLabel imagen){
		contentJuego.setComponentZOrder(imagen,0); 
	}

	public class JPanelFondo extends JPanel{ 
		private static final long serialVersionUID = 1L;
		private Image image = null; 
		private Icon icon; 
	
		protected void paintComponent(Graphics g) { 
			Graphics2D g2 =(Graphics2D) g; 
			if(getImage()!=null){ 
				g2.drawImage(getImage(), 0, 0, getWidth(), getHeight(), null); 
			} 
		} 
	
		public Image getImage() { 
			return image; 
		} 
	
		public void setImage(Image image) { 
			this.image = image; 
		} 
	
		public Icon getIcon() { 
			return icon; 
		} 
	
		public void setIcon(Icon icon){ 
			this.icon=icon; 
			setImage(((ImageIcon)icon).getImage()); 
		} 
	}
}